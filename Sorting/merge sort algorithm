#include <set>
#include <map>
#include <list>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <string>
#include <vector>
#include <bitset>
#include <random>
#include<iomanip>
#include <cassert>
#include <cstring>
#include <sstream>
#include <complex>
#include <numeric>
#include <iostream>
#include <algorithm>
#include <functional>
#include <unordered_set>
#include <unordered_map>
using namespace std;

void merge(vector<int>&a , int l, int mid, int r){
	int n1 = mid - l + 1;
	int n2 = r - mid;
	int left[n1] , right[n2];
	for(int i=0;i<n1;i++){
		left[i] = a[l+i];
	}
	for(int i=0;i<n2;i++){
		right[i] = a[mid+1+i];
	}
	int i = 0,j = 0,k = l;
	while(i<n1 and j < n2){
		if(left[i] < right[j]){
			a[k++] = left[i++];
		}else{
			a[k++] = right[j++];
		}
	}
	while(i<n1)a[k++] = left[i++];
	while(j<n2)a[k++] = right[j++];
}

void merge_sort(vector<int>& a , int l, int r){
	if(l < r){
		int mid = (l+r)/2;
		merge_sort(a,l,mid);
		merge_sort(a,mid+1,r);
		merge(a,l,mid, r);
	}
}

int main(){
	cin.tie(0);ios::sync_with_stdio(false);
	
	int n;
	cin>>n;

	vector<int>a(n);
	for(int i=0;i<n;i++){
		cin>>a[i];
	}
	merge_sort(a,0,n-1);
	for(int i=0;i<n;i++){
		cout<<a[i]<<" ";
	}cout<<endl;

	

	return 0;
}
