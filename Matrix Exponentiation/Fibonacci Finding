//https://www.hackerrank.com/challenges/fibonacci-finding-easy/submissions/code/170259305
//Author: Fuadul Hasan(fuadul202@gmail.com)
//BSMRSTU,Gopalganj
#include<bits/stdc++.h>
using namespace std;int tc = 1;
#define happy ios::sync_with_stdio(false);
#define coding  cin.tie(0);
#define F first
#define S second
#define mp make_pair
#define ll long long
#define Pi atan(1)*4
#define pb  push_back
#define vpr vector<pr> 
#define pr pair<int, int> 
#define vi std::vector<int>
#define vll std::vector<ll>
#define YES printf("YES\n");
#define NO printf("NO\n");
#define Yes printf("Yes\n");
#define No printf("No\n");
#define all(n) n.begin(),n.end()
#define point(x) setprecision(x)
#define Test printf("Case %d: ",tc++);
#define Unique(c) (c).resize(unique(all(c))-(c).begin())
#define vout(v) for (auto z: v) cout << z << " "; cout << endl;

#define error(args...) {vector<string>_v=split(#args,',');err(_v.begin(),args);cout<<endl;}
vector<string> split(const string &s, char c) {vector<string>v; stringstream ss(s); string x;
while (getline(ss, x, c))v.emplace_back(x); return move(v);} void err(vector<string>::iterator it) {}
template<typename T, typename... Args>void err(vector<string>::iterator it, T a, Args...args) {
cout << it->substr((*it)[0] == ' ', it->length()) << " = " << a << " "; err(++it, args...);}

const int M = 1e9 + 7;
const ll  Inf = (ll)2e18 + 5;
const int N   = 2e5 + 5;
ll vis[N],res[N];

ll ar[3];
ll I[3][3],T[3][3];

void mul(ll A[3][3], ll B[3][3],int dim){
    ll res[dim+1][dim+1];
    for(int i=1;i<3;i++){
        for(int j=1;j<3;j++){
            res[i][j] = 0;
            for(int k=1;k<3;k++){
                ll x = (A[i][k]*B[k][j])%M;
                res[i][j] = (res[i][j]+x)%M;
            }
        }
    }
    for(int i=1;i<=dim;i++){
        for(int j=1;j<=dim;j++){
            A[i][j] = res[i][j];
        }
    }
}

ll getFib(ll n){
    if(n<=2) return ar[n];
    for(int i=1;i<3;i++){
        for(int j=1;j<3;j++){
            if(i==j) I[i][j] = 1;
            else I[i][j] = 0;
            if(i==1 and j == 1)T[i][i] = 0;
            else T[i][j] = 1;
        }
    }


    n--;

    while(n){
        if(n&1) mul(I,T,2);
        mul(T,T,2);
        n>>=1;
    }

    return (ar[1]*I[1][1] + ar[2]*I[2][1])%M;

}


int solve() 
{
    //happy coding


    ll n;
    cin>>ar[1]>>ar[2]>>n;
    n++;
    cout<<getFib(n)<<endl;
    
    return 0;
}
int main(){
    int test = 1;
      scanf("%d", &test);
      while (test--)solve();return 0;
}
